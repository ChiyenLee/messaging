// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace messaging {
constexpr IMU::IMU(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : quaternion_()
  , rpy_()
  , gyro_()
  , time_(0){}
struct IMUDefaultTypeInternal {
  constexpr IMUDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IMUDefaultTypeInternal() {}
  union {
    IMU _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IMUDefaultTypeInternal _IMU_default_instance_;
constexpr VICON::VICON(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : position_()
  , quaternion_()
  , time_(0){}
struct VICONDefaultTypeInternal {
  constexpr VICONDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VICONDefaultTypeInternal() {}
  union {
    VICON _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VICONDefaultTypeInternal _VICON_default_instance_;
constexpr PORTLIST::PORTLIST(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PORTLISTDefaultTypeInternal {
  constexpr PORTLISTDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PORTLISTDefaultTypeInternal() {}
  union {
    PORTLIST _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PORTLISTDefaultTypeInternal _PORTLIST_default_instance_;
}  // namespace messaging
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_message_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::IMU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::IMU, quaternion_),
  PROTOBUF_FIELD_OFFSET(::messaging::IMU, rpy_),
  PROTOBUF_FIELD_OFFSET(::messaging::IMU, gyro_),
  PROTOBUF_FIELD_OFFSET(::messaging::IMU, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::VICON, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messaging::VICON, position_),
  PROTOBUF_FIELD_OFFSET(::messaging::VICON, quaternion_),
  PROTOBUF_FIELD_OFFSET(::messaging::VICON, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messaging::PORTLIST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::messaging::IMU)},
  { 9, -1, sizeof(::messaging::VICON)},
  { 17, -1, sizeof(::messaging::PORTLIST)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messaging::_IMU_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messaging::_VICON_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messaging::_PORTLIST_default_instance_),
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\022\tmessaging\"B\n\003IMU\022\022\n\nqua"
  "ternion\030\001 \003(\001\022\013\n\003rpy\030\002 \003(\001\022\014\n\004gyro\030\003 \003(\001"
  "\022\014\n\004time\030\004 \001(\001\";\n\005VICON\022\020\n\010position\030\001 \003("
  "\001\022\022\n\nquaternion\030\002 \003(\001\022\014\n\004time\030\004 \001(\001\"*\n\010P"
  "ORTLIST\"\036\n\006TOPICS\022\n\n\006HEADER\020\000\022\010\n\003IMU\020\210\'b"
  "\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto = {
  false, false, 207, descriptor_table_protodef_message_2eproto, "message.proto", 
  &descriptor_table_message_2eproto_once, nullptr, 0, 3,
  schemas, file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);
namespace messaging {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PORTLIST_TOPICS_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
bool PORTLIST_TOPICS_IsValid(int value) {
  switch (value) {
    case 0:
    case 5000:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PORTLIST_TOPICS PORTLIST::HEADER;
constexpr PORTLIST_TOPICS PORTLIST::IMU;
constexpr PORTLIST_TOPICS PORTLIST::TOPICS_MIN;
constexpr PORTLIST_TOPICS PORTLIST::TOPICS_MAX;
constexpr int PORTLIST::TOPICS_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class IMU::_Internal {
 public:
};

IMU::IMU(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  quaternion_(arena),
  rpy_(arena),
  gyro_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messaging.IMU)
}
IMU::IMU(const IMU& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      quaternion_(from.quaternion_),
      rpy_(from.rpy_),
      gyro_(from.gyro_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:messaging.IMU)
}

void IMU::SharedCtor() {
time_ = 0;
}

IMU::~IMU() {
  // @@protoc_insertion_point(destructor:messaging.IMU)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IMU::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IMU::ArenaDtor(void* object) {
  IMU* _this = reinterpret_cast< IMU* >(object);
  (void)_this;
}
void IMU::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IMU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IMU::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.IMU)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quaternion_.Clear();
  rpy_.Clear();
  gyro_.Clear();
  time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IMU::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double quaternion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_quaternion(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9) {
          _internal_add_quaternion(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double rpy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_rpy(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_rpy(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double gyro = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_gyro(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25) {
          _internal_add_gyro(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IMU::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.IMU)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double quaternion = 1;
  if (this->_internal_quaternion_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_quaternion(), target);
  }

  // repeated double rpy = 2;
  if (this->_internal_rpy_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_rpy(), target);
  }

  // repeated double gyro = 3;
  if (this->_internal_gyro_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_gyro(), target);
  }

  // double time = 4;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.IMU)
  return target;
}

size_t IMU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.IMU)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double quaternion = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_quaternion_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double rpy = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_rpy_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double gyro = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_gyro_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // double time = 4;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMU::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.IMU)
  GOOGLE_DCHECK_NE(&from, this);
  const IMU* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IMU>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.IMU)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.IMU)
    MergeFrom(*source);
  }
}

void IMU::MergeFrom(const IMU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.IMU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quaternion_.MergeFrom(from.quaternion_);
  rpy_.MergeFrom(from.rpy_);
  gyro_.MergeFrom(from.gyro_);
  if (!(from.time() <= 0 && from.time() >= 0)) {
    _internal_set_time(from._internal_time());
  }
}

void IMU::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.IMU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMU::CopyFrom(const IMU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.IMU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMU::IsInitialized() const {
  return true;
}

void IMU::InternalSwap(IMU* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  quaternion_.InternalSwap(&other->quaternion_);
  rpy_.InternalSwap(&other->rpy_);
  gyro_.InternalSwap(&other->gyro_);
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IMU::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}

// ===================================================================

class VICON::_Internal {
 public:
};

VICON::VICON(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  position_(arena),
  quaternion_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messaging.VICON)
}
VICON::VICON(const VICON& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      position_(from.position_),
      quaternion_(from.quaternion_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:messaging.VICON)
}

void VICON::SharedCtor() {
time_ = 0;
}

VICON::~VICON() {
  // @@protoc_insertion_point(destructor:messaging.VICON)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VICON::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VICON::ArenaDtor(void* object) {
  VICON* _this = reinterpret_cast< VICON* >(object);
  (void)_this;
}
void VICON::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VICON::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VICON::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.VICON)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_.Clear();
  quaternion_.Clear();
  time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VICON::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_position(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9) {
          _internal_add_position(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double quaternion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_quaternion(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_quaternion(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VICON::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.VICON)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double position = 1;
  if (this->_internal_position_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_position(), target);
  }

  // repeated double quaternion = 2;
  if (this->_internal_quaternion_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_quaternion(), target);
  }

  // double time = 4;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.VICON)
  return target;
}

size_t VICON::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.VICON)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double position = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_position_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double quaternion = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_quaternion_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // double time = 4;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VICON::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.VICON)
  GOOGLE_DCHECK_NE(&from, this);
  const VICON* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VICON>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.VICON)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.VICON)
    MergeFrom(*source);
  }
}

void VICON::MergeFrom(const VICON& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.VICON)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_.MergeFrom(from.position_);
  quaternion_.MergeFrom(from.quaternion_);
  if (!(from.time() <= 0 && from.time() >= 0)) {
    _internal_set_time(from._internal_time());
  }
}

void VICON::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.VICON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VICON::CopyFrom(const VICON& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.VICON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VICON::IsInitialized() const {
  return true;
}

void VICON::InternalSwap(VICON* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  position_.InternalSwap(&other->position_);
  quaternion_.InternalSwap(&other->quaternion_);
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VICON::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}

// ===================================================================

class PORTLIST::_Internal {
 public:
};

PORTLIST::PORTLIST(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:messaging.PORTLIST)
}
PORTLIST::PORTLIST(const PORTLIST& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:messaging.PORTLIST)
}

void PORTLIST::SharedCtor() {
}

PORTLIST::~PORTLIST() {
  // @@protoc_insertion_point(destructor:messaging.PORTLIST)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PORTLIST::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PORTLIST::ArenaDtor(void* object) {
  PORTLIST* _this = reinterpret_cast< PORTLIST* >(object);
  (void)_this;
}
void PORTLIST::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PORTLIST::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PORTLIST::Clear() {
// @@protoc_insertion_point(message_clear_start:messaging.PORTLIST)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PORTLIST::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PORTLIST::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messaging.PORTLIST)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messaging.PORTLIST)
  return target;
}

size_t PORTLIST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messaging.PORTLIST)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PORTLIST::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messaging.PORTLIST)
  GOOGLE_DCHECK_NE(&from, this);
  const PORTLIST* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PORTLIST>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messaging.PORTLIST)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messaging.PORTLIST)
    MergeFrom(*source);
  }
}

void PORTLIST::MergeFrom(const PORTLIST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messaging.PORTLIST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PORTLIST::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messaging.PORTLIST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PORTLIST::CopyFrom(const PORTLIST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messaging.PORTLIST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PORTLIST::IsInitialized() const {
  return true;
}

void PORTLIST::InternalSwap(PORTLIST* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PORTLIST::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace messaging
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::messaging::IMU* Arena::CreateMaybeMessage< ::messaging::IMU >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messaging::IMU >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::VICON* Arena::CreateMaybeMessage< ::messaging::VICON >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messaging::VICON >(arena);
}
template<> PROTOBUF_NOINLINE ::messaging::PORTLIST* Arena::CreateMaybeMessage< ::messaging::PORTLIST >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messaging::PORTLIST >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
